#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to remove spaces and duplicate letters from the keyword
void prepareKeyword(char *keyword) {
    int len = strlen(keyword);
    int index = 0;
    char seen[26] = {0};

    for (int i = 0; i < len; i++) {
        if (isalpha(keyword[i])) {
            char letter = tolower(keyword[i]);
            if (!seen[letter - 'a']) {
                seen[letter - 'a'] = 1;
                keyword[index] = letter;
                index++;
            }
        }
    }

    for (char letter = 'a'; letter <= 'z'; letter++) {
        if (!seen[letter - 'a']) {
            keyword[index] = letter;
            index++;
        }
    }

    keyword[25] = '\0';
}

// Function to create the Playfair matrix
void createPlayfairMatrix(char matrix[5][5], const char *keyword) {
    char *key = keyword;
    char alphabet[26] = {0};

    for (int i = 0; i < 25; i++) {
        matrix[i / 5][i % 5] = *key;
        alphabet[*key - 'a'] = 1;
        key++;
    }
}

// Function to find the row and column of a character in the Playfair matrix
void findPosition(char matrix[5][5], char ch, int *row, int *col) {
    if (ch == 'j')
        ch = 'i';

    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

// Function to encrypt a pair of characters
void encryptPair(char matrix[5][5], char a, char b) {
    int rowA, colA, rowB, colB;
    findPosition(matrix, a, &rowA, &colA);
    findPosition(matrix, b, &rowB, &colB);

    if (rowA == rowB) {
        printf("%c%c", matrix[rowA][(colA + 1) % 5], matrix[rowB][(colB + 1) % 5]);
    } else if (colA == colB) {
        printf("%c%c", matrix[(rowA + 1) % 5][colA], matrix[(rowB + 1) % 5][colB]);
    } else {
        printf("%c%c", matrix[rowA][colB], matrix[rowB][colA]);
    }
}

int main() {
    char keyword[26];
    char matrix[5][5];

    printf("Enter the keyword (no spaces, max 25 letters): ");
    scanf(" %[^\n]", keyword);
    prepareKeyword(keyword);
    createPlayfairMatrix(matrix, keyword);

    char plaintext[100];
    printf("Enter the plaintext (no spaces, even number of letters): ");
    scanf(" %[^\n]", plaintext);

    if (strlen(plaintext) % 2 != 0) {
        printf("The plaintext must contain an even number of letters.\n");
        return 1;
    }

    printf("Encrypted text: ");
    for (int i = 0; plaintext[i] != '\0'; i += 2) {
        encryptPair(matrix, plaintext[i], plaintext[i + 1]);
    }
    printf("\n");

    return 0;
}
