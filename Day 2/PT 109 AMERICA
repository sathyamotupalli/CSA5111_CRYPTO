def construct_playfair_matrix(key):
    key = key.replace("J", "I")  # Replace 'J' with 'I'
    key = "".join(dict.fromkeys(key))  # Remove duplicates

    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    matrix = []

    for char in key + alphabet:
        if char not in matrix:
            matrix.append(char)

    return [matrix[i:i + 5] for i in range(0, 25, 5)]

def playfair_decrypt(matrix, ciphertext):
    def find_coords(char):
        for row in range(5):
            for col in range(5):
                if matrix[row][col] == char:
                    return row, col

    plaintext = ""
    ciphertext = ciphertext.replace(" ", "")  # Remove spaces

    for i in range(0, len(ciphertext), 2):
        a, b = ciphertext[i], ciphertext[i + 1]
        row1, col1 = find_coords(a)
        row2, col2 = find_coords(b)

        if row1 == row2:
            plaintext += matrix[row1][(col1 - 1) % 5] + matrix[row2][(col2 - 1) % 5]
        elif col1 == col2:
            plaintext += matrix[(row1 - 1) % 5][col1] + matrix[(row2 - 1) % 5][col2]
        else:
            plaintext += matrix[row1][col2] + matrix[row2][col1]

    return plaintext

# Example usage:
key = "KEYWORD"
message = "KXJEY UREBE ZWEHE WRYTU HEYFS KREHE GOYFI WTTTU OLKSY CAJPO BOTEI ZONTX BYBNT GONEY CUZWR GDSON SXBOU YWRHE BAAHY USEDQ"
matrix = construct_playfair_matrix(key)
decrypted_message = playfair_decrypt(matrix, message)
print(decrypted_message)
